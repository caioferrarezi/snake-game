{"version":3,"sources":["webpack://snake-game/webpack/bootstrap","webpack://snake-game/webpack/runtime/global","webpack://snake-game/webpack/runtime/publicPath","webpack://snake-game/./src/utils/constants.js","webpack://snake-game/./src/utils/canvas.js","webpack://snake-game/./src/game/snake/body-piece.js","webpack://snake-game/./src/game/snake/index.js","webpack://snake-game/./src/game/fruit/index.js","webpack://snake-game/./src/assets/collect.wav","webpack://snake-game/./src/assets/hit.wav","webpack://snake-game/./src/index.js","webpack://snake-game/./src/game/index.js"],"names":["__webpack_require__","g","globalThis","this","Function","e","window","scriptUrl","importScripts","location","document","currentScript","src","scripts","getElementsByTagName","length","Error","replace","p","KEYS","LEFT","UP","RIGHT","DOWN","ACTION","_screen","_context","_pixelSize","width","height","createElement","Math","ceil","getContext","body","insertAdjacentElement","randomX","floor","random","randomY","x","y","BodyPiece","prev","next","Snake","_pos","canvas","_vel","_size","_color","_init","_head","_tail","_push","tail","head","cur","is","fruit","i","_add","_pop","Fruit","game","_state","_score","_snake","_fruit","_collectSound","Audio","collect","_hitSound","hit","_setControls","onkeydown","_onKeyDown","bind","keyCode","preventDefault","includes","moveLeft","moveUp","moveRight","moveDown","update","hitWall","bitten","play","eat","grow","_clear","_showFinishedScreen","_showScore","show","time1","Date","now","time2","draw","requestAnimationFrame"],"mappings":"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","file":"main-de45cebbeabfb1eeeb9f.js","sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","var scriptUrl;\nif (__webpack_require__.g.importScripts) scriptUrl = __webpack_require__.g.location + \"\";\nvar document = __webpack_require__.g.document;\nif (!scriptUrl && document) {\n\tif (document.currentScript)\n\t\tscriptUrl = document.currentScript.src\n\tif (!scriptUrl) {\n\t\tvar scripts = document.getElementsByTagName(\"script\");\n\t\tif(scripts.length) scriptUrl = scripts[scripts.length - 1].src\n\t}\n}\n// When supporting browsers where an automatic publicPath is not supported you must specify an output.publicPath manually via configuration\n// or pass an empty string (\"\") and set the __webpack_public_path__ variable from your code to use your own logic.\nif (!scriptUrl) throw new Error(\"Automatic publicPath is not supported in this browser\");\nscriptUrl = scriptUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\").replace(/\\/[^\\/]+$/, \"/\");\n__webpack_require__.p = scriptUrl;","export const PIXEL_SIZE = 15;\n\nexport const COLORS = {\n  BACKGROUND: '#F7F7FF',\n  SNAKE: '#070600',\n  FRUIT: '#EA526F'\n}\n\nexport const KEYS = {\n  LEFT: [37, 65],\n  UP: [38, 87],\n  RIGHT: [39, 68],\n  DOWN: [40, 83],\n  ACTION: [13, 32]\n}\n","import { PIXEL_SIZE } from 'utils/constants';\n\nlet canvas;\n\nclass Canvas {\n  constructor() {\n    this._screen;\n    this._context;\n    this._pixelSize;\n  }\n\n  create(width, height) {\n    this._screen = document.createElement('canvas');\n\n    this._screen.width = width;\n    this._screen.height = height;\n\n    this._pixelSize = Math.ceil(width / height) * 10;\n\n    this._context = this._screen.getContext('2d');\n\n    document.body.insertAdjacentElement('afterbegin', this._screen);\n  }\n\n  get width() {\n    return this._screen.width;\n  }\n\n  get height() {\n    return this._screen.height;\n  }\n\n  get pixelSize() {\n    return this._pixelSize;\n  }\n\n  get context() {\n    return this._context;\n  }\n\n  getRandomPosition() {\n    const randomX = Math.floor(Math.random() * this.width);\n    const randomY = Math.floor(Math.random() * this.height);\n\n    const x = randomX - (randomX % this._pixelSize);\n    const y = randomY - (randomY % this._pixelSize);\n\n    return { x, y };\n  }\n}\n\ncanvas = new Canvas();\n\nexport default canvas;\n","export default class BodyPiece {\n  constructor(x, y, prev = null, next = null) {\n    this.x = x;\n    this.y = y;\n    this.prev = prev;\n    this.next = next;\n  }\n}\n","import canvas from 'utils/canvas';\nimport { COLORS, KEYS } from 'utils/constants';\n\nimport BodyPiece from 'game/snake/body-piece'\n\nexport default class Snake {\n  constructor() {\n    this._pos = canvas.getRandomPosition();\n    this._vel = { x: 0, y: 0 };\n\n    this._size = canvas.pixelSize;\n    this._color = COLORS.SNAKE;\n\n    this._init();\n  }\n\n  _init() {\n    const { x, y } = this._pos\n\n    this._head = null;\n    this._tail = null;\n\n    this._push(x, y);\n  }\n\n  _push(x, y) {\n    if (!this._head) {\n      this._head = new BodyPiece(x, y);\n      this._tail = this._head;\n\n      return;\n    }\n\n    let tail = new BodyPiece(x, y, this._tail, null);\n    this._tail.next = tail;\n\n    this._tail = tail;\n  }\n\n  _add(x, y) {\n    if (!this._head) {\n      this._head = new BodyPiece(x, y);\n      this._tail = this._head;\n\n      return;\n    }\n\n    let head = new BodyPiece(x, y, null, this._head);\n    this._head.prev = head;\n\n    this._head = head;\n  }\n\n  _pop() {\n    this._tail = this._tail.prev;\n    this._tail.next = null;\n  }\n\n  moveLeft() {\n    if (this._vel.x === this._size) return;\n\n    this._vel = { x: -this._size, y: 0 };\n  }\n\n  moveUp() {\n    if (this._vel.y === this._size) return;\n\n    this._vel = { x: 0, y: -this._size };\n  }\n\n  moveRight() {\n    if (this._vel.x === -this._size) return;\n\n    this._vel = { x: this._size, y: 0 };\n  }\n\n  moveDown() {\n    if (this._vel.y === -this._size) return;\n\n    this._vel = { x: 0, y: this._size };\n  }\n\n  is(x, y) {\n    for (let cur = this._head.next; cur !== null && cur.next !== null; cur = cur.next) {\n      if (cur.x === x && cur.y === y)\n        return true;\n    }\n\n    return false;\n  }\n\n  bitten() {\n    let { x, y } = this._head;\n\n    return this.is(x, y);\n  }\n\n  hitWall() {\n    const { x, y } = this._head;\n\n    return (\n      x < 0 ||\n      y < 0 ||\n      x > canvas.width - canvas.pixelSize ||\n      y > canvas.height - canvas.pixelSize\n    )\n  }\n\n  eat(fruit) {\n    const { x, y } = this._head;\n\n    return x === fruit.x && y === fruit.y;\n  }\n\n  grow() {\n    let tail = this._tail;\n\n    for (let i = 0 ; i < 5; i++) {\n      this._push(tail.x, tail.y);\n    }\n  }\n\n  update() {\n    this._pos.x += this._vel.x;\n    this._pos.y += this._vel.y;\n\n    this._add(this._pos.x, this._pos.y);\n    this._pop();\n  }\n\n  show() {\n    for (let cur = this._head; cur !== null; cur = cur.next) {\n      canvas.context.fillStyle = this._color;\n      canvas.context.fillRect(cur.x, cur.y, this._size, this._size);\n    }\n  }\n}\n","import canvas from 'utils/canvas';\nimport { COLORS } from 'utils/constants';\n\nexport default class Fruit {\n  constructor () {\n    this._size = canvas.pixelSize;\n    this._color = COLORS.FRUIT;\n    this._pos = canvas.getRandomPosition();\n  }\n\n  get x() {\n    return this._pos.x;\n  }\n\n  get y() {\n    return this._pos.y;\n  }\n\n  update() {\n    this._pos = canvas.getRandomPosition();\n  }\n\n  show() {\n    canvas.context.fillStyle = this._color;\n    canvas.context.fillRect(this._pos.x, this._pos.y, this._size, this._size);\n  }\n}\n","export default __webpack_public_path__ + \"4b4fb936bfb505c08b72764a6832684d.wav\";","export default __webpack_public_path__ + \"a8de16a43e1a29ae9d0979b66bc7f7c4.wav\";","import { FPS } from 'utils/constants';\nimport Game from 'game';\n\nconst game = new Game();\n\nlet time1 = Date.now();\nlet time2 = Date.now();\nlet elapsedTime = 0;\n\nlet frameCount = 0;\n\nfunction setup() {\n  frameCount = 0;\n\n  draw();\n}\n\nfunction draw() {\n  time2 = Date.now();\n  elapsedTime = time2 - time1;\n\n  if (elapsedTime > 100) {\n    time1 = time2;\n\n    game.update();\n    game.show();\n  }\n\n  requestAnimationFrame(draw);\n}\n\nsetup();\n","import canvas from 'utils/canvas';\nimport { COLORS, KEYS } from 'utils/constants';\n\nimport Snake from 'game/snake';\nimport Fruit from 'game/fruit';\n\nimport collect from 'assets/collect.wav';\nimport hit from 'assets/hit.wav'\n\nexport default class Game {\n  constructor() {\n    canvas.create(800, 600);\n\n    this._init();\n  }\n\n  _init() {\n    this._state = 'playing';\n    this._score = 0;\n\n    this._snake = new Snake();\n    this._fruit = new Fruit();\n\n    this._collectSound = new Audio(collect);\n    this._hitSound = new Audio(hit);\n\n    this._setControls();\n  }\n\n  _clear() {\n    canvas.context.fillStyle = COLORS.BACKGROUND;\n    canvas.context.fillRect(0, 0, canvas.width, canvas.height);\n  }\n\n  _showScore() {\n    canvas.context.fillStyle = '#222222';\n    canvas.context.textAlign = 'left';\n    canvas.context.textBaseline = 'top';\n    canvas.context.font = `32px VT323, monospace`;\n    canvas.context.fillText(`Score: ${this._score}`, canvas.pixelSize, canvas.pixelSize);\n  }\n\n  _showFinishedScreen() {\n    const x = canvas.width / 2;\n    const y = canvas.height / 2;\n\n    canvas.context.fillStyle = '#222222';\n    canvas.context.textAlign = 'center';\n    canvas.context.textBaseline = 'middle';\n    canvas.context.font = `normal 48px VT323, monospace`;\n    canvas.context.fillText(`You've scored: ${this._score}`, x, y - 30);\n    canvas.context.font = `normal 32px VT323, monospace`;\n    canvas.context.fillText(`Press [Enter] or [Space] to restart`, x, y + 30);\n  }\n\n  _setControls() {\n    window.onkeydown = this._onKeyDown.bind(this)\n  }\n\n  _onKeyDown({ keyCode, preventDefault }) {\n    if (KEYS.LEFT.includes(keyCode)) {\n      return this._snake.moveLeft();\n    }\n\n    if (KEYS.UP.includes(keyCode)) {\n      return this._snake.moveUp();\n    }\n\n    if (KEYS.RIGHT.includes(keyCode)) {\n      return this._snake.moveRight();\n    }\n\n    if (KEYS.DOWN.includes(keyCode)) {\n      return this._snake.moveDown();\n    }\n\n    if (KEYS.ACTION.includes(keyCode)) {\n      switch(this._state) {\n      case 'finished':\n        this._init();\n        break;\n      case 'playing':\n        this._state = 'paused';\n        break;\n      case 'paused':\n        this._state = 'playing';\n        break;\n      }\n    }\n  }\n\n  update() {\n    if (this._state !== 'playing') return;\n\n    this._snake.update();\n\n    if (this._snake.hitWall() || this._snake.bitten()) {\n      this._state = 'finished';\n      this._hitSound.play();\n    }\n\n    if (this._snake.eat(this._fruit)) {\n      this._snake.grow();\n      this._fruit.update();\n\n      while (this._snake.is(this._fruit.x, this._fruit.y)) {\n        this._fruit.update();\n      }\n\n      this._score++;\n      this._collectSound.play();\n    }\n  }\n\n  show() {\n    this._clear();\n\n    switch(this._state) {\n    case 'finished':\n      this._showFinishedScreen();\n      break;\n    case 'playing':\n    case 'paused':\n      this._showScore();\n\n      this._snake.show();\n      this._fruit.show();\n      break;\n    }\n  }\n}\n"],"sourceRoot":""}